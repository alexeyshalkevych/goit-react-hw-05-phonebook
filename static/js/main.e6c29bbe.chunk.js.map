{"version":3,"sources":["components/ContactForm/ContactForm.styled.js","components/ContactForm/ContactForm.js","components/Contact/Contact.styled.js","components/Contact/Contact.js","components/ContactList/ContactList.styled.js","transition/slide.transition.js","components/ContactList/ContactList.js","components/ContactFilter/ContactFilter.styled.js","transition/pop.transition.js","components/ContactFilter/ContactFilter.js","components/Phonebook/Phonebook.styled.js","transition/popText.transition.js","components/Phonebook/Phonebook.js","utils/helpers.js","components/App/App.js","index.js"],"names":["FormContainer","styled","form","Label","label","InputField","input","Button","button","initialState","name","number","reducer","state","type","field","value","ContactForm","onAddContact","useReducer","dispatch","handleChange","e","target","onSubmit","preventDefault","onChange","autoComplete","ContactContainer","div","ContactName","span","ContactNumber","DeleteButton","Contact","item","onDeleteContact","onClick","List","ul","li","Slide","transition","attrs","unmountOnExit","timeout","ContactList","items","TransitionGroup","component","map","key","id","PopFilter","ContactFilter","onChangeFilter","isFiltered","in","PhonebookContainer","PhonebookTitle","h1","PhonebookSubTitle","h2","Notification","ToastContainer","SlideTitle","Phonebook","useState","contacts","setContacts","filter","setFilter","showTitle","setShowTitle","useEffect","persistedContacts","localStorage","getItem","JSON","parse","err","Error","get","setItem","stringify","save","filteredContacts","contact","toLowerCase","includes","filterContacts","contactToAdd","uuidv4","length","trim","toast","error","match","isValidContact","find","findContact","filtered","autoClose","App","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.e6c29bbe.chunk.js","sourcesContent":["import styled from 'styled-components';\n\nexport const FormContainer = styled.form`\n  width: 100%;\n  margin-bottom: 20px;\n  padding: 10px;\n  box-shadow: 0px 2px 5px 0px rgba(0, 0, 0, 0.59);\n`;\n\nexport const Label = styled.label`\n  font-family: sans-serif;\n  font-size: 16px;\n  line-height: 1.2;\n  font-weight: 500;\n`;\n\nexport const InputField = styled.input`\n  display: block;\n  width: 100%;\n  margin-bottom: 15px;\n  padding: 8px 5px;\n  border-radius: 4px;\n  border: 1px solid rgb(126, 126, 126);\n\n  :focus {\n    border-color: rgb(0, 106, 177);\n    outline: none;\n  }\n`;\n\nexport const Button = styled.button`\n  display: block;\n  width: 100%;\n  padding: 10px 5px;\n  font-family: sans-serif;\n  font-size: 14px;\n  line-height: 1.2;\n  font-weight: 400;\n  color: #fff;\n  background-color: rgb(0, 106, 177);\n  border: none;\n  border-radius: 4px;\n  box-shadow: 0px 2px 2px -1px rgba(0, 0, 0, 0.75);\n  transition: all 0.2s ease-in;\n\n  :hover {\n    cursor: pointer;\n    background-color: rgb(19, 19, 138);\n  }\n\n  :disabled {\n    cursor: default;\n    background-color: rgb(85, 85, 85);\n  }\n`;\n","import React, { useReducer } from 'react';\nimport PropTypes from 'prop-types';\nimport { FormContainer, Label, InputField, Button } from './ContactForm.styled';\n\nconst initialState = {\n  name: '',\n  number: '',\n};\n\nconst reducer = (state, { type, field, value }) => {\n  switch (type) {\n    case 'RESET':\n      return initialState;\n    case 'CHANGE_INPUT':\n      return {\n        ...state,\n        [field]: value,\n      };\n    default:\n      return state;\n  }\n};\n\nconst ContactForm = ({ onAddContact }) => {\n  const [state, dispatch] = useReducer(reducer, initialState);\n  const { name, number } = state;\n\n  const resetForm = () => {\n    dispatch({ type: 'RESET' });\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    onAddContact({ name, number });\n\n    resetForm();\n  };\n\n  const handleChange = e => {\n    const { name, value } = e.target;\n\n    dispatch({ type: 'CHANGE_INPUT', field: name, value });\n  };\n\n  return (\n    <FormContainer onSubmit={handleSubmit}>\n      <Label>\n        Name\n        <InputField\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          onChange={handleChange}\n          autoComplete=\"off\"\n        />\n      </Label>\n      <Label>\n        Number\n        <InputField\n          type=\"text\"\n          name=\"number\"\n          value={number}\n          onChange={handleChange}\n          autoComplete=\"off\"\n        />\n      </Label>\n      <Button type=\"submit\">Add contact</Button>\n    </FormContainer>\n  );\n};\n\nContactForm.propTypes = {\n  onAddContact: PropTypes.func.isRequired,\n};\n\nexport default ContactForm;\n","import styled from 'styled-components';\n\nexport const ContactContainer = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`;\n\nexport const ContactName = styled.span`\n  flex: 1 0 auto;\n`;\n\nexport const ContactNumber = styled.span`\n  margin-right: 50px;\n`;\n\nexport const DeleteButton = styled.button`\n  display: block;\n  padding: 5px 10px;\n  font-family: sans-serif;\n  font-size: 16px;\n  line-height: 1.2;\n  font-weight: 400;\n  color: rgb(255, 255, 255);\n  background-color: rgb(218, 1, 1);\n  border: none;\n  border-radius: 4px;\n  box-shadow: 0px 2px 2px -1px rgba(0, 0, 0, 0.75);\n  transition: all 0.2s ease-in;\n\n  :hover {\n    cursor: pointer;\n    background-color: rgb(170, 0, 0);\n  }\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  ContactContainer,\n  ContactName,\n  ContactNumber,\n  DeleteButton,\n} from './Contact.styled';\n\nconst Contact = ({ item: { name, number }, onDeleteContact }) => (\n  <ContactContainer>\n    <ContactName>{name}</ContactName>\n    <ContactNumber>{number}</ContactNumber>\n    <DeleteButton type=\"button\" onClick={onDeleteContact}>\n      &#10006;\n    </DeleteButton>\n  </ContactContainer>\n);\n\nContact.propTypes = {\n  item: PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired,\n  }).isRequired,\n  onDeleteContact: PropTypes.func.isRequired,\n};\n\nexport default Contact;\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  margin: 0;\n  padding: 0;\n  list-style: none;\n`;\n\nexport const ListItem = styled.li`\n  padding: 10px;\n  box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.59);\n`;\n","import transition from 'styled-transition-group';\n\nconst Slide = transition.li.attrs({\n  unmountOnExit: true,\n  timeout: 250,\n})`\n  padding: 10px;\n  box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.59);\n\n  &:enter { \n    opacity: 0;\n    transform: translateX(-100%); \n  }\n\n  &:enter-active {\n    opacity: 1;\n    transform: translateX(0);\n    transition: opacity 250ms ease-in-out, transform 250ms ease-in-out;\n  }\n\n  &:exit { \n    opacity: 1;\n    transform: translateX(0);\n  }\n\n  &:exit-active {\n    opacity: 0;\n    transform: translateX(-100%);\n    transition: opacity 250ms ease-in-out, transform 250ms ease-in-out;\n  }\n`;\n\nexport default Slide;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { TransitionGroup } from 'react-transition-group';\nimport Contact from '../Contact/Contact';\nimport { List } from './ContactList.styled';\nimport Slide from '../../transition/slide.transition';\n\nconst ContactList = ({ items, onDeleteContact }) => (\n  <TransitionGroup component={List}>\n    {items.map(item => (\n      <Slide key={item.id}>\n        <Contact item={item} onDeleteContact={() => onDeleteContact(item.id)} />\n      </Slide>\n    ))}\n  </TransitionGroup>\n);\n\nContactList.propTypes = {\n  items: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n    }).isRequired,\n  ).isRequired,\n  onDeleteContact: PropTypes.func.isRequired,\n};\n\nexport default ContactList;\n","import styled from 'styled-components';\n\nexport const FilterContainer = styled.div`\n  width: 100%;\n  margin-bottom: 20px;\n  padding: 10px 10px 15px;\n  box-shadow: 0px 2px 5px 0px rgba(0, 0, 0, 0.59);\n`;\n\nexport const Label = styled.label`\n  font-family: sans-serif;\n  font-size: 16px;\n  line-height: 1.2;\n  font-weight: 500;\n`;\n\nexport const InputField = styled.input`\n  display: block;\n  width: 100%;\n  padding: 8px 5px;\n  border-radius: 4px;\n  border: 1px solid rgb(126, 126, 126);\n\n  :focus {\n    border-color: rgb(0, 106, 177);\n    outline: none;\n  }\n`;\n","import transition from 'styled-transition-group';\n\nconst PopFilter = transition.div.attrs({\n  unmountOnExit: true,\n  timeout: 250,\n})`\n  width: 100%;\n  margin-bottom: 20px;\n  padding: 10px 10px 15px;\n  box-shadow: 0px 2px 5px 0px rgba(0, 0, 0, 0.59);\n\n  &:enter {\n    transform: scale(0);\n  }\n\n  &:enter-active {\n    transform: scale(1);\n    transition: transform 250ms ease-in-out;\n  }\n\n  &:exit {\n    transform: scale(1);\n  }\n\n  &:exit-active {\n    transform: scale(0);\n    transition: transform 250ms ease-in-out;\n  }\n`;\n\nexport default PopFilter;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Label, InputField } from './ContactFilter.styled';\nimport PopFilter from '../../transition/pop.transition';\n\nconst ContactFilter = ({ value, onChangeFilter, isFiltered }) => (\n  <PopFilter in={isFiltered}>\n    <Label>\n      Find contacts by name\n      <InputField type=\"text\" value={value} onChange={onChangeFilter} />\n    </Label>\n  </PopFilter>\n);\n\nContactFilter.propTypes = {\n  value: PropTypes.string.isRequired,\n  onChangeFilter: PropTypes.func.isRequired,\n  isFiltered: PropTypes.bool.isRequired,\n};\n\nexport default ContactFilter;\n","import styled from 'styled-components';\nimport { ToastContainer } from 'react-toastify';\n\nexport const PhonebookContainer = styled.div`\n  max-width: 400px;\n  min-width: 310px;\n  margin: 0 auto;\n  padding: 0 5px;\n`;\n\nexport const PhonebookTitle = styled.h1`\n  margin: 0 0 10px 0;\n  font-family: sans-serif;\n  font-size: 30px;\n  line-height: 1.2;\n  font-weight: 900;\n  color: rgb(0, 106, 177);\n`;\n\nexport const PhonebookSubTitle = styled.h2`\n  margin: 0 0 10px 0;\n  font-family: sans-serif;\n  font-size: 20px;\n  line-height: 1.2;\n  font-weight: 900;\n  color: rgb(0, 106, 177);\n`;\n\nexport const Notification = styled(ToastContainer)`\n  top: -5px;\n  right: 37%;\n  padding: 6px 4px;\n  margin: 0;\n  width: 210px;\n  .Toastify__close-button {\n    display: none;\n  }\n`;\n","import transition from 'styled-transition-group';\n\nconst SlideTitle = transition.div.attrs({\n  unmountOnExit: true,\n  timeout: 500,\n})`\n  &:enter { \n    opacity: 0;\n    transform: translateX(-100%); \n  }\n\n  &:enter-active {\n    opacity: 1;\n    transform: translateX(0);\n    transition: opacity 500ms ease-in-out, transform 500ms ease-in-out;\n  }\n\n  &:exit { \n    opacity: 1;\n    transform: translateX(0);\n  }\n\n  &:exit-active {\n    opacity: 0;\n    transform: translateX(-100%);\n    transition: opacity 500ms ease-in-out, transform 500ms ease-in-out;\n  }\n`;\n\nexport default SlideTitle;\n","import React, { useState, useEffect } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport { toast } from 'react-toastify';\nimport ContactForm from '../ContactForm/ContactForm';\nimport ContactList from '../ContactList/ContactList';\nimport ContactFilter from '../ContactFilter/ContactFilter';\nimport { filterContacts, findContact, get, save } from '../../utils/helpers';\nimport {\n  PhonebookContainer,\n  PhonebookTitle,\n  PhonebookSubTitle,\n  Notification,\n} from './Phonebook.styled';\nimport 'react-toastify/dist/ReactToastify.css';\nimport SlideTitle from '../../transition/popText.transition';\n\nconst Phonebook = () => {\n  const [contacts, setContacts] = useState([]);\n  const [filter, setFilter] = useState('');\n  const [showTitle, setShowTitle] = useState(false);\n\n  useEffect(() => {\n    setShowTitle(true);\n\n    const persistedContacts = get('contacts');\n\n    if (persistedContacts) {\n      setContacts(persistedContacts);\n    }\n  }, []);\n\n  useEffect(() => {\n    save('contacts', contacts);\n  }, [contacts]);\n\n  const changeFilter = e => {\n    const { value } = e.target;\n\n    setFilter(value);\n  };\n\n  const isValidContact = ({ name, number }) => {\n    if (name.length <= 1 || name.trim() === 0) {\n      toast.error(`Your name is not valid. Please enter correct information.`);\n      return false;\n    }\n\n    if (!number.match(/^\\(?([0-9]{3})\\)?[- ]?([0-9]{2})[- ]?([0-9]{2})$/)) {\n      toast.error(\n        `Your number is not valid. Please enter correct information.`,\n      );\n      return false;\n    }\n\n    return true;\n  };\n\n  const addContact = contact => {\n    const contactToAdd = {\n      ...contact,\n      id: uuidv4(),\n    };\n\n    if (isValidContact(contact)) {\n      const stateContact = findContact(contacts, contact);\n\n      if (stateContact) {\n        toast.error(`${contact.name} is already in contacts.`);\n        return;\n      }\n\n      setContacts([...contacts, contactToAdd]);\n    }\n  };\n\n  const deleteContact = id => {\n    const filtered = contacts.filter(contact => contact.id !== id);\n\n    setContacts(filtered);\n  };\n\n  const filteredContacts = filterContacts(contacts, filter);\n\n  return (\n    <PhonebookContainer>\n      <SlideTitle in={showTitle}>\n        <PhonebookTitle>Phonebook</PhonebookTitle>\n      </SlideTitle>\n      <ContactForm onAddContact={addContact} />\n      <PhonebookSubTitle>Contacts</PhonebookSubTitle>\n      <ContactFilter\n        value={filter}\n        onChangeFilter={changeFilter}\n        isFiltered={contacts.length >= 2}\n      />\n      <ContactList items={filteredContacts} onDeleteContact={deleteContact} />\n      <Notification autoClose={1500} />\n    </PhonebookContainer>\n  );\n};\n\nexport default Phonebook;\n","const filterContacts = (contacts, filter) =>\n  contacts.filter(contact =>\n    contact.name.toLowerCase().includes(filter.toLowerCase()),\n  );\n\nconst findContact = (contacts, contact) =>\n  contacts.find(item => item.name === contact.name);\n\nconst save = (key, value) => {\n  try {\n    localStorage.setItem(key, JSON.stringify(value));\n  } catch (err) {\n    throw new Error();\n  }\n};\n\nconst get = key => {\n  try {\n    const items = localStorage.getItem(key);\n\n    return items ? JSON.parse(items) : null;\n  } catch (err) {\n    throw new Error();\n  }\n};\n\nexport { filterContacts, findContact, save, get };\n","import React from 'react';\nimport Phonebook from '../Phonebook/Phonebook';\n\nconst App = () => <Phonebook />;\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App/App';\nimport './index.css';\n\nReactDOM.render(<App />, document.querySelector('#root'));\n"],"sourceRoot":""}